name: Create Release
on: push
jobs:
  release-project:
    name: Release latest version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip -r oke-stack terraform

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: V${{ github.run_number }}
          release_name: Release V${{ github.run_number }}
          # draft: false
          # prerelease: false
          #

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./oke-stack.zip
          asset_name: oke-stack-latest.zip
          asset_content_type: application/zip
